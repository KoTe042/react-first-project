{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Cards from './components/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('cards')) || [{\n    id: 1,\n    title: 'Разработка веб-приложений',\n    img: 'svg/load.svg',\n    isFavorite: false\n  }, {\n    id: 2,\n    title: 'Структуры и алгоритмы обработки данных. Часть 2.',\n    img: 'svg/load.svg',\n    isFavorite: false\n  }, {\n    id: 3,\n    title: 'Теория принятия решений (очная форма)',\n    img: 'svg/load.svg',\n    isFavorite: false\n  }]);\n  useEffect(() => {\n    localStorage.setItem('cards', JSON.stringify(cards));\n  }, [cards]); // Эффект выполняется при изменении cards\n\n  const onToggleFavorite = id => {\n    setCards(prevCards => prevCards.map(card => card.id === id ? {\n      ...card,\n      isFavorite: !card.isFavorite\n    } : card));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            cards: cards,\n            onToggleFavorite: onToggleFavorite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q5/OXo9bZ42WL1SYIYA1tTPgfeM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Cards","jsxDEV","_jsxDEV","App","_s","cards","setCards","JSON","parse","localStorage","getItem","id","title","img","isFavorite","setItem","stringify","onToggleFavorite","prevCards","map","card","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/website/website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Cards from './components/Cards';\n\nfunction App() {\n  const [cards, setCards] = useState(JSON.parse(localStorage.getItem('cards')) || [\n    { id: 1, title: 'Разработка веб-приложений', img: 'svg/load.svg', isFavorite: false },\n    { id: 2, title: 'Структуры и алгоритмы обработки данных. Часть 2.', img: 'svg/load.svg', isFavorite: false },\n    { id: 3, title: 'Теория принятия решений (очная форма)', img: 'svg/load.svg', isFavorite: false }\n  ]);\n\n  useEffect(() => {\n    localStorage.setItem('cards', JSON.stringify(cards));\n  }, [cards]); // Эффект выполняется при изменении cards\n\n  const onToggleFavorite = (id) => {\n    setCards(prevCards => \n      prevCards.map(card => \n        card.id === id ? { ...card, isFavorite: !card.isFavorite } : card\n      )\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <main>\n        <section className=\"container\">\n          <div className=\"wrapper\">\n            <Cards cards={cards} onToggleFavorite={onToggleFavorite} />\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9E;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,2BAA2B;IAAEC,GAAG,EAAE,cAAc;IAAEC,UAAU,EAAE;EAAM,CAAC,EACrF;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,kDAAkD;IAAEC,GAAG,EAAE,cAAc;IAAEC,UAAU,EAAE;EAAM,CAAC,EAC5G;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,uCAAuC;IAAEC,GAAG,EAAE,cAAc;IAAEC,UAAU,EAAE;EAAM,CAAC,CAClG,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACdY,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACX,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMY,gBAAgB,GAAIN,EAAE,IAAK;IAC/BL,QAAQ,CAACY,SAAS,IAChBA,SAAS,CAACC,GAAG,CAACC,IAAI,IAChBA,IAAI,CAACT,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGS,IAAI;MAAEN,UAAU,EAAE,CAACM,IAAI,CAACN;IAAW,CAAC,GAAGM,IAC/D,CACF,CAAC;EACH,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBpB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAASmB,SAAS,EAAC,WAAW;QAAAC,QAAA,eAC5BpB,OAAA;UAAKmB,SAAS,EAAC,SAAS;UAAAC,QAAA,eACtBpB,OAAA,CAACF,KAAK;YAACK,KAAK,EAAEA,KAAM;YAACY,gBAAgB,EAAEA;UAAiB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACPxB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACtB,EAAA,CAhCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}