{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Cards from './components/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [displayCount, setDisplayCount] = useState(10); // для контроля отображения карточек\n\n  useEffect(() => {\n    const savedCards = localStorage.getItem('cards');\n    if (savedCards) {\n      setCards(JSON.parse(savedCards));\n    } else {\n      fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n        setCards(data.results);\n        localStorage.setItem('cards', JSON.stringify(data.results));\n      }).catch(error => console.log('Error fetching data: ', error));\n    }\n  }, []);\n  const onToggleFavorite = id => {\n    setCards(prevCards => prevCards.map(card => {\n      if (card.id === id) {\n        return {\n          ...card,\n          isFavorite: !card.isFavorite\n        };\n      }\n      return card;\n    }));\n  };\n  const showMoreCards = () => {\n    setDisplayCount(prevCount => prevCount + 10);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Cards, {\n            cards: cards.slice(0, displayCount),\n            onToggleFavorite: onToggleFavorite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), displayCount < cards.length && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showMoreCards,\n            children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0435\\u0449\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/XeKMyM6KVakK0dZXIeR5AWLXvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Cards","jsxDEV","_jsxDEV","App","_s","cards","setCards","displayCount","setDisplayCount","savedCards","localStorage","getItem","JSON","parse","fetch","then","response","json","data","results","setItem","stringify","catch","error","console","log","onToggleFavorite","id","prevCards","map","card","isFavorite","showMoreCards","prevCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","length","onClick","_c","$RefreshReg$"],"sources":["C:/website/website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Cards from './components/Cards';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [displayCount, setDisplayCount] = useState(10);  // для контроля отображения карточек\n\n  useEffect(() => {\n    const savedCards = localStorage.getItem('cards');\n    if (savedCards) {\n      setCards(JSON.parse(savedCards));\n    } else {\n      fetch('https://rickandmortyapi.com/api/character')\n        .then(response => response.json())\n        .then(data => {\n          setCards(data.results);\n          localStorage.setItem('cards', JSON.stringify(data.results));\n        })\n        .catch(error => console.log('Error fetching data: ', error));\n    }\n  }, []);\n\n  const onToggleFavorite = (id) => {\n    setCards(prevCards =>\n      prevCards.map(card => {\n        if (card.id === id) {\n          return { ...card, isFavorite: !card.isFavorite };\n        }\n        return card;\n      })\n    );\n  };\n\n  const showMoreCards = () => {\n    setDisplayCount(prevCount => prevCount + 10);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <main>\n        <section className=\"container\">\n          <div className=\"wrapper\">\n            <Cards cards={cards.slice(0, displayCount)} onToggleFavorite={onToggleFavorite} />\n            {displayCount < cards.length && (\n              <button onClick={showMoreCards}>Показать еще</button>\n            )}\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdH,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IAClC,CAAC,MAAM;MACLK,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZZ,QAAQ,CAACY,IAAI,CAACC,OAAO,CAAC;QACtBT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACH,IAAI,CAACC,OAAO,CAAC,CAAC;MAC7D,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAIC,EAAE,IAAK;IAC/BrB,QAAQ,CAACsB,SAAS,IAChBA,SAAS,CAACC,GAAG,CAACC,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGG,IAAI;UAAEC,UAAU,EAAE,CAACD,IAAI,CAACC;QAAW,CAAC;MAClD;MACA,OAAOD,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BxB,eAAe,CAACyB,SAAS,IAAIA,SAAS,GAAG,EAAE,CAAC;EAC9C,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBjC,OAAA,CAACJ,MAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAASgC,SAAS,EAAC,WAAW;QAAAC,QAAA,eAC5BjC,OAAA;UAAKgC,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBjC,OAAA,CAACF,KAAK;YAACK,KAAK,EAAEA,KAAK,CAACmC,KAAK,CAAC,CAAC,EAAEjC,YAAY,CAAE;YAACmB,gBAAgB,EAAEA;UAAiB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACjFhC,YAAY,GAAGF,KAAK,CAACoC,MAAM,iBAC1BvC,OAAA;YAAQwC,OAAO,EAAEV,aAAc;YAAAG,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACrD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACPrC,OAAA,CAACH,MAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACnC,EAAA,CAlDQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}